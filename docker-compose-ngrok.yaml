# Copyright (c) 2018-2022 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

version: '3'

services:
  envoy:
    image: envoyproxy/envoy:v1.22.5
    command: ["--service-cluster", "envoyproxy", "--config-path", "/etc/envoy/envoy.yaml"]
    ports:
      - "10000:10000"
      - "9901:9901"
    volumes:
      - ./compose-config/envoy.yaml:/etc/envoy/envoy.yaml
      - type: bind
        source: ./compose-config/certs/server.pem
        target: /home/certs/server.pem
        read_only: true
      - type: bind
        source: ./compose-config/certs/server.key
        target: /home/certs/server.key
        read_only: true
      - type: bind
        source: ./compose-config/certs/rootCA.pem
        target: /home/certs/rootCA.pem
        read_only: true
    extra_hosts:
      - host.docker.internal:host-gateway

  fluentd-loki:
    image: grafana/fluent-plugin-loki:master    # based on 1.9 and not having the updated http plugin for json-array
    command: ["-v"]
    volumes:
      - ./compose-config/fluent-loki.conf:/fluentd/etc/fluent.conf
    ports:
      - "24225:24225"
      - "24225:24225/udp"

  grafana:
    image: grafana/grafana:9.1.6
    volumes:
      - ./compose-config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    extra_hosts:
      - host.docker.internal:host-gateway

  loki:
    image: grafana/loki:main-489898f
    ports:
      - "3100:3100"
    volumes:
      - ./compose-config/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    extra_hosts:
      - host.docker.internal:host-gateway

  nginx:
    image: nginx:1.23.2
    ports:
      - "10001:10001"
    volumes:
      - ./compose-config/nginx.conf:/etc/nginx/nginx.conf
      - type: bind
        source: ./compose-config/certs/client.pem
        target: /home/certs/client.pem
        read_only: true
      - type: bind
        source: ./compose-config/certs/client.key
        target: /home/certs/client.key
        read_only: true
      - type: bind
        source: ./compose-config/certs/rootCA.pem
        target: /home/certs/rootCA.pem
        read_only: true
    extra_hosts:
      - host.docker.internal:host-gateway

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.58.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      - tempo
    volumes:
      - ./compose-config/otel-collector.yaml:/etc/otel-collector-config.yaml
    environment:
      - GRAPHANA_TRACES_SAMPLING_PERCENTAGE
    ports:
      - "9411:9411"   # zipkin receiver
    extra_hosts:
      - host.docker.internal:host-gateway

  prometheus:
    image: prom/prometheus:v2.37.2
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./compose-config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    extra_hosts:
      - host.docker.internal:host-gateway

  tempo:
    image: grafana/tempo:main-16fc036
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./compose-config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"   # tempo
      - "4317"        # otlp grpc
      - "4318"        # otlp http
      - "9411"        # zipkin
    extra_hosts:
      - host.docker.internal:host-gateway

  ngrok:
    image: ngrok/ngrok:latest
    command: ["tcp", "host.docker.internal:${NGROK_TARGET_PORT}"]
    environment:
      - NGROK_AUTHTOKEN
    extra_hosts:
      - host.docker.internal:host-gateway